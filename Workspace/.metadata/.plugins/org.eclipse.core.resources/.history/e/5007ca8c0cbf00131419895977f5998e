package model;

import java.util.List;
import java.util.Random;

public class RandomStrategy extends AbstractStrategy
{
	@Override
	public GameState getNextGameState(GameState gameState) {
		super.getNextGameState(gameState);
		
		int counter = 0;
		int lastIndexWithNotZeroEntry = -1;
		List<Integer> columns = gameState.getColumns();
		GameState resultGameState = new GameState(gameState);
		
		for(int i = 0; i < columns.size(); ++i)
		{
			if(columns.get(i) != 0) {
				++counter;
				lastIndexWithNotZeroEntry = i;
			}
		}
		
		if(counter == 1)
		{
			// Die letzte Zeile wird sofort auf 0 gesetzt
			resultGameState.changeValueOfColumn(lastIndexWithNotZeroEntry, 0);
		}
		else
		{
			
		}
		
		return null;
	}
	
	public void changeGameStateResultRandomly() {
		Random randomGenerator = new Random();
		int columnIndex = 0;
		
		do {
			columnIndex = randomGenerator.nextInt(lastIndexWithNotZeroEntry+1);
		} while(columns.get(columnIndex) == 0);
		
		int newValue = randomGenerator.nextInt(columns.get(columnIndex)+1);
		
		resultGameState.changeValueOfColumn(columnIndex, newValue);
	}

}
